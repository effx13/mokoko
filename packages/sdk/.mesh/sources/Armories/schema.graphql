schema {
  query: Query
}

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(sourceName: "Armories", endpoint: "https://developer-lostark.game.onstove.com", operationHeaders: "{\"Authorization\":\"{context.headers.authorization}\"}") {
  "Returns a summary of the basic stats by a character name."
  Armories_GetProfileInfo(
    "The name of the character"
    characterName: String!
  ): ArmoryProfile @httpOperation(path: "/armories/characters/{args.characterName}/profiles", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns a summary of the items equipped by a character name."
  Armories_GetEquipment(
    "The name of the character"
    characterName: String!
  ): [ArmoryEquipment] @httpOperation(path: "/armories/characters/{args.characterName}/equipment", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns a summary of the avatars equipped by a character name."
  Armories_GetAvatars(
    "The name of the character"
    characterName: String!
  ): [ArmoryAvatar] @httpOperation(path: "/armories/characters/{args.characterName}/avatars", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns a summary of the combat skills by a character name."
  Armories_GetSkills(
    "The name of the character"
    characterName: String!
  ): [ArmorySkill] @httpOperation(path: "/armories/characters/{args.characterName}/combat-skills", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns a summary of the engravings equipped by a character name."
  Armories_GetEngrave(
    "The name of the character"
    characterName: String!
  ): ArmoryEngraving @httpOperation(path: "/armories/characters/{args.characterName}/engravings", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns a summary of the cards equipped by a character name."
  Armories_GetCard(
    "The name of the character"
    characterName: String!
  ): ArmoryCard @httpOperation(path: "/armories/characters/{args.characterName}/cards", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns a summary of the gems equipped by a character name."
  Armories_GetGem(
    "The name of the character"
    characterName: String!
  ): ArmoryGem @httpOperation(path: "/armories/characters/{args.characterName}/gems", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns a summary of the proving grounds by a character name."
  Armories_GetColosseumInfo(
    "The name of the character"
    characterName: String!
  ): ColosseumInfo @httpOperation(path: "/armories/characters/{args.characterName}/colosseums", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns a summary of the collectibles by a character name."
  Armories_GetCollections(
    "The name of the character"
    characterName: String!
  ): [Collectible] @httpOperation(path: "/armories/characters/{args.characterName}/collectibles", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
}

type ArmoryProfile {
  CharacterImage: String
  ExpeditionLevel: Int
  PvpGradeName: String
  TownLevel: Int
  TownName: String
  Title: String
  GuildMemberGrade: String
  GuildName: String
  Stats: [Stat]
  Tendencies: [Tendency]
  ServerName: String
  CharacterName: String
  CharacterLevel: Int
  CharacterClassName: String
  ItemAvgLevel: String
  ItemMaxLevel: String
}

type Stat {
  Type: String
  Value: String
  Tooltip: [String]
}

type Tendency {
  Type: String
  Point: Int
  MaxPoint: Int
}

type ArmoryEquipment {
  Type: String
  Name: String
  Icon: String
  Grade: String
  Tooltip: String
}

type ArmoryAvatar {
  Type: String
  Name: String
  Icon: String
  Grade: String
  IsSet: Boolean
  IsInner: Boolean
  Tooltip: String
}

type ArmorySkill {
  Name: String
  Icon: String
  Level: Int
  Type: String
  IsAwakening: Boolean
  Tripods: [SkillTripod]
  Rune: SkillRune
  Tooltip: String
}

type SkillTripod {
  Tier: Int
  Slot: Int
  Name: String
  Icon: String
  Level: Int
  IsSelected: Boolean
  Tooltip: String
}

type SkillRune {
  Name: String
  Icon: String
  Grade: String
  Tooltip: String
}

type ArmoryEngraving {
  Engravings: [Engraving]
  Effects: [Effect]
}

type Engraving {
  Slot: Int
  Name: String
  Icon: String
  Tooltip: String
}

type Effect {
  Name: String
  Description: String
}

type ArmoryCard {
  Cards: [Card]
  Effects: [CardEffect]
}

type Card {
  Slot: Int
  Name: String
  Icon: String
  AwakeCount: Int
  AwakeTotal: Int
  Grade: String
  Tooltip: String
}

type CardEffect {
  Index: Int
  CardSlots: [Int]
  Items: [Effect]
}

type ArmoryGem {
  Gems: [Gem]
  Effects: [GemEffect]
}

type Gem {
  Slot: Int
  Name: String
  Icon: String
  Level: Int
  Grade: String
  Tooltip: String
}

type GemEffect {
  GemSlot: Int
  Name: String
  Description: String
  Icon: String
  Tooltip: String
}

type ColosseumInfo {
  Rank: Int
  PreRank: Int
  Exp: BigInt
  Colosseums: [Colosseum]
}

"The `BigInt` scalar type represents non-fractional signed whole numeric values."
scalar BigInt

type Colosseum {
  SeasonName: String
  Competitive: AggregationTeamDeathMatchRank
  TeamDeathmatch: Aggregation
  Deathmatch: Aggregation
  TeamElimination: AggregationElimination
  CoOpBattle: Aggregation
}

type AggregationTeamDeathMatchRank {
  Rank: Int
  RankName: String
  RankIcon: String
  RankLastMmr: Int
  PlayCount: Int
  VictoryCount: Int
  LoseCount: Int
  TieCount: Int
  KillCount: Int
  AceCount: Int
  DeathCount: Int
}

type Aggregation {
  PlayCount: Int
  VictoryCount: Int
  LoseCount: Int
  TieCount: Int
  KillCount: Int
  AceCount: Int
  DeathCount: Int
}

type AggregationElimination {
  FirstWinCount: Int
  SecondWinCount: Int
  ThirdWinCount: Int
  FirstPlayCount: Int
  SecondPlayCount: Int
  ThirdPlayCount: Int
  AllKillCount: Int
  PlayCount: Int
  VictoryCount: Int
  LoseCount: Int
  TieCount: Int
  KillCount: Int
  AceCount: Int
  DeathCount: Int
}

type Collectible {
  Type: String
  Icon: String
  Point: Int
  MaxPoint: Int
  CollectiblePoints: [CollectiblePoint]
}

type CollectiblePoint {
  PointName: String
  Point: Int
  MaxPoint: Int
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}