schema {
  query: Query
}

directive @enum(value: String) on ENUM_VALUE

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(sourceName: "Auctions", endpoint: "https://developer-lostark.game.onstove.com", operationHeaders: "{\"Authorization\":\"{context.headers.authorization}\"}") {
  "Returns search options for the auction house."
  Auctions_GetOptions: AuctionOption @httpOperation(path: "/auctions/options", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns all active auctions with search options."
  Auctions_GetItems(input: RequestAuctionItems_Input!): Auction @httpOperation(path: "/auctions/items", operationSpecificHeaders: "{\"Content-Type\":\"application/json\",\"Accept\":\"application/json\"}", httpMethod: POST)
}

type AuctionOption {
  MaxItemLevel: Int
  ItemGradeQualities: [Int]
  SkillOptions: [SkillOption]
  EtcOptions: [EtcOption]
  Categories: [Category]
  ItemGrades: [String]
  ItemTiers: [Int]
  Classes: [String]
}

type SkillOption {
  Value: Int
  Class: String
  Text: String
  IsSkillGroup: Boolean
  Tripods: [Tripod]
}

type Tripod {
  Value: Int
  Text: String
  IsGem: Boolean
}

type EtcOption {
  Value: Int
  Text: String
  EtcSubs: [EtcSub]
}

type EtcSub {
  Value: Int
  Text: String
  Class: String
}

type Category {
  Subs: [CategoryItem]
  Code: Int
  CodeName: String
}

type CategoryItem {
  Code: Int
  CodeName: String
}

type Auction {
  PageNo: Int
  PageSize: Int
  TotalCount: BigInt
  Items: [AuctionItem]
}

"The `BigInt` scalar type represents non-fractional signed whole numeric values."
scalar BigInt

type AuctionItem {
  Name: String
  Grade: String
  Tier: Int
  Level: Int
  Icon: String
  GradeQuality: Int
  AuctionInfo: AuctionInfo
  Options: [ItemOption]
}

type AuctionInfo {
  StartPrice: BigInt
  BuyPrice: BigInt
  BidPrice: BigInt
  EndDate: DateTime
  BidCount: Int
  BidStartPrice: BigInt
  IsCompetitive: Boolean
  TradeAllowCount: Int
}

"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar DateTime

type ItemOption {
  Type: query_Auctions_GetItems_Items_items_Options_items_Type
  OptionName: String
  OptionNameTripod: String
  Value: Int
  IsPenalty: Boolean
  ClassName: String
}

enum query_Auctions_GetItems_Items_items_Options_items_Type {
  None
  SKILL
  STAT
  ABILITY_ENGRAVE
  BRACELET_SPECIAL_EFFECTS
  GEM_SKILL_COOLDOWN_REDUCTION
  GEM_SKILL_COOLDOWN_REDUCTION_IDENTITY
  GEM_SKILL_DAMAGE
  GEM_SKILL_DAMAGE_IDENTITY
  BRACELET_RANDOM_SLOT
}

"The search options for the auction house"
input RequestAuctionItems_Input {
  ItemLevelMin: Int
  ItemLevelMax: Int
  ItemGradeQuality: Int
  SkillOptions: [SearchDetailOption_Input]
  EtcOptions: [SearchDetailOption_Input]
  Sort: queryInput_Auctions_GetItems_input_Sort
  CategoryCode: Int
  CharacterClass: String
  ItemTier: Int
  ItemGrade: String
  ItemName: String
  PageNo: Int
  SortCondition: queryInput_Auctions_GetItems_input_SortCondition
}

input SearchDetailOption_Input {
  FirstOption: Int
  SecondOption: Int
  MinValue: Int
  MaxValue: Int
}

enum queryInput_Auctions_GetItems_input_Sort {
  BIDSTART_PRICE
  BUY_PRICE
  EXPIREDATE
  ITEM_GRADE
  ITEM_LEVEL
  ITEM_QUALITY
}

enum queryInput_Auctions_GetItems_input_SortCondition {
  ASC
  DESC
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}