schema {
  query: Query
  mutation: Mutation
}

directive @enum(value: String) on ENUM_VALUE

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(sourceName: "Armories", endpoint: "https://developer-lostark.game.onstove.com", operationHeaders: "{\"Authorization\":\"{context.headers.authorization}\"}") {
  "Returns search options for the market."
  Markets_GetOptions: MarketOption @httpOperation(path: "/markets/options", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
  "Returns a market item by ID."
  Markets_GetStats(
    "The ID of the item"
    itemId: BigInt!
  ): [MarketItemStats] @httpOperation(path: "/markets/items/{args.itemId}", operationSpecificHeaders: "{\"Content-Type\":\"\",\"Accept\":\"application/json\"}", httpMethod: GET)
}

type MarketOption {
  Categories: [Category]
  ItemGrades: [String]
  ItemTiers: [Int]
  Classes: [String]
}

type Category {
  Subs: [CategoryItem]
  Code: Int
  CodeName: String
}

type CategoryItem {
  Code: Int
  CodeName: String
}

type MarketItemStats {
  Name: String
  TradeRemainCount: Int
  BundleCount: Int
  Stats: [MarketStatsInfo]
}

type MarketStatsInfo {
  Date: String
  AvgPrice: Float
  TradeCount: Int
}

"The `BigInt` scalar type represents non-fractional signed whole numeric values."
scalar BigInt

type Mutation {
  "Returns all active market items with search options."
  Markets_GetItems(input: RequestMarketItems_Input!): MarketList @httpOperation(path: "/markets/items", operationSpecificHeaders: "{\"Content-Type\":\"application/json\",\"Accept\":\"application/json\"}", httpMethod: POST)
}

type MarketList {
  PageNo: Int
  PageSize: Int
  TotalCount: Int
  Items: [MarketItem]
}

type MarketItem {
  Id: BigInt
  Name: String
  Grade: String
  Icon: String
  BundleCount: Int
  TradeRemainCount: Int
  YDayAvgPrice: Float
  RecentPrice: Int
  CurrentMinPrice: Int
}

"The search options for the market"
input RequestMarketItems_Input {
  Sort: mutationInput_Markets_GetItems_input_Sort
  CategoryCode: Int
  CharacterClass: String
  ItemTier: Int
  ItemGrade: String
  ItemName: String
  PageNo: Int
  SortCondition: mutationInput_Markets_GetItems_input_SortCondition
}

enum mutationInput_Markets_GetItems_input_Sort {
  GRADE
  YDAY_AVG_PRICE
  RECENT_PRICE
  CURRENT_MIN_PRICE
}

enum mutationInput_Markets_GetItems_input_SortCondition {
  ASC
  DESC
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}